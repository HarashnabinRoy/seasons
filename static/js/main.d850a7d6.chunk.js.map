{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"8MAGMA,EAAe,CACjBC,OAAQ,CACJC,KAAM,sBACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,oBACNC,SAAU,cAyBHE,EAbO,SAACC,GACnB,IATeC,EAAKC,EASdC,GATSF,EASWD,EAAMC,KATZC,GASiB,IAAIE,MAAOC,YARpC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIH,EAEFP,EAAaS,GAAhCP,EAFqB,EAErBA,KAAMC,EAFe,EAEfA,SAEd,OACK,sBAAKS,UAAS,yBAAsBH,GAApC,UACG,mBAAGG,UAAS,4BAAyBT,EAAzB,WACZ,6BAAKD,IACL,mBAAGU,UAAS,6BAA0BT,EAA1B,eC5BlBU,EAAU,SAACP,GACb,OACI,qBAAKM,UAAY,mBAAjB,SACI,sBAAKA,UAAY,qBAAjB,cAAwCN,EAAMQ,QAA9C,UAKZD,EAAQE,aAAe,CACnBD,QAAS,cAGED,QCTTG,E,4MACFC,MAAQ,CAAEV,IAAK,KAAMW,aAAc,I,uDAEnC,WAAqB,IAAD,OAChBC,OAAOC,UAAUC,YAAYC,oBACzB,SAACC,GAAD,OAAc,EAAKC,SAAS,CAAEjB,IAAKgB,EAASE,OAAOC,cACnD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAEN,aAAcS,EAAIb,e,2BAIjD,WACI,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IAChC,0CAAaqB,KAAKX,MAAMC,iBAG9BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IAChC,cAAC,EAAD,CAAeA,IAAOqB,KAAKX,MAAMV,MAGrC,cAAC,EAAD,CAASO,QAAS,iC,oBAE7B,WACI,OACI,qBAAKF,UAAY,aAAjB,SACKgB,KAAKC,sB,GAxBJC,IAAMC,WA8BxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.d850a7d6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SeasonDisplay.css';\r\n\r\nconst seasonConfig = {\r\n    summer: {\r\n        text: 'Lets hit the beach!',\r\n        iconName: 'sun'\r\n    },\r\n    winter: {\r\n        text: 'Burr, it is cold!',\r\n        iconName: 'snowflake'\r\n    }\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n    if (month > 2 && month < 9) {\r\n        return lat > 0 ? 'summer' : 'winter' ;\r\n    } else {\r\n        return lat > 0 ? 'winter' : 'summer'; \r\n    }\r\n}; \r\n\r\nconst SeasonDisplay = (props) => {\r\n    const season = getSeason (props.lat, new Date().getMonth());\r\n    const { text, iconName } = seasonConfig[season]; \r\n\r\n    return (\r\n         <div className = {`season-display ${season}`}> \r\n            <i className = {`icon-left massive ${iconName} icon`} />\r\n            <h1>{text}</h1> \r\n            <i className = {`icon-right massive ${iconName} icon`} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SeasonDisplay;","import React from 'react';\r\n\r\nconst Spinner = (props) => {\r\n    return (\r\n        <div className = \"ui active dimmer\">\r\n            <div className = \"ui big text loader\"> {props.message} </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n    message: 'Loading...'\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Spinner from './Spinner'\r\n\r\nclass App extends React.Component {\r\n    state = { lat: null, errorMessage: ''};\r\n\r\n    componentDidMount() {\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            (position) => this.setState({ lat: position.coords.latitude }),\r\n            err => this.setState({ errorMessage: err.message })\r\n        );\r\n    }\r\n\r\n    renderContent() {\r\n        if (this.state.errorMessage && !this.state.lat) {\r\n            return <div>Error: {this.state.errorMessage}</div>;\r\n        }\r\n        \r\n        if (!this.state.errorMessage && this.state.lat) {\r\n            return <SeasonDisplay lat = {this.state.lat} />\r\n        }\r\n\r\n        return <Spinner message= \"Please accept the location\" />\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = \"border red\">\r\n                {this.renderContent()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}